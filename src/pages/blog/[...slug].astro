---
import { BlogPagination } from "@/components/BlogPagination";
import Layout from "@/layouts/Layout.astro";
import type { CollectionEntry } from "astro:content";
import { getCollection } from "astro:content";

const blogEntries = await getCollection("blog");
blogEntries.sort((a, b) => b.data.pubDate.getTime() - a.data.pubDate.getTime());
export async function getStaticPaths() {
  const blogEntries = await getCollection("blog");
  blogEntries.sort(
    (a, b) => b.data.pubDate.getTime() - a.data.pubDate.getTime(),
  );
  return blogEntries.map((entry, i) => ({
    params: { slug: entry.slug },
    props: {
      entry,
      index: i,
    },
  }));
}

export type BlogPostProps = {
  entry: CollectionEntry<"blog">;
  index: number;
};

const { entry, index } = Astro.props as BlogPostProps;
const { Content } = await entry.render();
const item = entry.data;
const pubDate = new Date(item.pubDate).toLocaleDateString("en-US", {
  year: "numeric",
  month: "long",
  day: "numeric",
});
---

<Layout title={entry.data.title}>
  <time
    datetime={item.pubDate.toISOString()}
    class="text-sm text-neutral-500 ml-auto"
  >
    {`Posted on ${pubDate}`}
  </time>

  <article class="prose-slate prose sm:prose-lg w-full">
    <h1 transition:name={`blog-${entry.slug}`}>{item.title}</h1>
    <Content />
  </article>

  <BlogPagination
    index={index}
    blogEntries={blogEntries}
    transition:name="blog-pagination"
  />
</Layout>
